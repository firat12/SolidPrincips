Eğer tek sorumluluk prensibine uyarsanız bu şekilde binlerce satırlık class’larınız methodlarınız olmaz.
Her class’ın, her mothodun sadece tek bir yaptığı iş vardır, böylece bir değişiklik yapmak için
sadece bir nedeniniz olmuş olur. Genişleyebilir, tekrar kullanılabilir ve
test edilebilir yapılar kurmak için tek sorumlulukilkesini dikkate almamız gerekir.

Örneğin : Aynı clasın içerisnde adres ve kisi crud işlemleri yapmak
veya aynı metod içerisnde hemsave hemde read kodları yazmak bu prensibe aykırıdır.
Bu hususta kodları ayırdığımzıdakod tekrarında önüne geçmiş oluyoruz.

BU prenibe örnek için ekstra classlar üzerinde örnek vermeyi gerek duymadım.